<?php

namespace App\Controller;

use App\Entity\User;
use Doctrine\ORM\EntityManagerInterface;
use GuzzleHttp\Client;
use GuzzleHttp\Psr7\Request;
use ipinfo\ipinfo\IPinfo;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;

class HomeController extends AbstractController
{
    /**
     * @Route("/home", name="home");
     * @Route("/");
     * @Route("/views");
     *
     *
     */
    public function index()
    {
        $weather = $this->getWeatherData();
        dump($weather);
        return $this->render('views/index.html.twig', [
            'controller_name' => 'Home',
            'weather' => $weather
        ]);
    }

    public function show(EntityManagerInterface $em )
    {
        $repository = $em->getRepository(User::class);
        $user = $repository->find(1);
        return parent::getUser(); // TODO: Change the autogenerated stub
    }

    public function getWeatherData()
    {
        $accessKey = 'a1c1eba1acc1e526b8d3b266a23b4cf9';
        $checkMeOut = 'http://api.weatherstack.com/current?access_key=a1c1eba1acc1e526b8d3b266a23b4cf9&query=walkden';
        $location = $this->getUserLocation();
        $location = $location['city'];
        $param = ['access_key' => $accessKey, 'query' => $location,
        ];
        $client = new Client([
            'base_uri' => 'http://api.weatherstack.com'
        ]);

        $response = $client->request('GET', '/current', ['query' => ['query' => $location, 'access_key' => $accessKey]]);

        return json_decode($response->getBody()->getContents(), true);

    }

    public function getUserLocation()
    {
        $accessToken = 'fe417cb8db98c4';

        $client = new IPinfo($accessToken);
        $ip_address = $this->getUserIp();
        $details = $client->getDetails($ip_address);

        return $details->all;
    }
    public function getUserIp()
    {
        $client = new Client([
            'base_uri' => 'http://httpbin.org',
            'timeout' => 2.0
        ]);

        $response = $client->request('GET', 'ip');

        $data = json_decode($response->getBody()->getContents(), true);

        $ip = $data['origin'];

        return $ip;

    }
}
